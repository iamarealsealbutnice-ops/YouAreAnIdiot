#!/usr/bin/env python3
"""
create_bat.py

Creates a folder in the current user's Documents directory and places a .bat file
that echoes a message N times. Safe / harmless by default.
"""
import os
import argparse
from pathlib import Path

def main(folder_name: str, message: str, repeats: int, bat_name: str):
    documents = Path.home() / "Documents"
    folder_path = documents / folder_name
    folder_path.mkdir(parents=True, exist_ok=True)

    bat_file_path = folder_path / bat_name

    # Write a batch file that echoes the message repeats times, then waits for a keypress
    with bat_file_path.open("w", encoding="utf-8") as f:
        f.write("@echo off\n")
        f.write("REM This batch file was generated by create_bat.py\n")
        for i in range(repeats):
            # echo with the count so it's clear which line is which
            f.write(f'echo ({i+1}/{repeats}) {message}\n')
        f.write("echo.\n")
        f.write("pause\n")

    print(f"Created folder: {folder_path}")
    print(f"Created batch file: {bat_file_path}")
    print("Run the .bat file by double-clicking it or via the command prompt.")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Create a folder in Documents with a .bat file that echoes a message multiple times.")
    parser.add_argument("--folder", "-f", default="FunFolder", help="Name of the folder to create inside Documents")
    parser.add_argument("--message", "-m", default="Hello! This is a test message.", help="Message to be echoed in the .bat file")
    parser.add_argument("--repeats", "-r", type=int, default=10, help="How many times to repeat the message")
    parser.add_argument("--batname", "-b", default="message.bat", help="Name of the generated .bat file")

    args = parser.parse_args()
    # Minimal validation
    if args.repeats < 1:
        parser.error("repeats must be >= 1")

    main(args.folder, args.message, args.repeats, args.batname)
